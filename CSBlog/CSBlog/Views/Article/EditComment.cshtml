@using CSBlog.Models.User
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using CSBlog.Core
@using System.Security.Claims
@model CSBlog.Core.ViewModels.Blog.CommentViewModel
@inject UserManager<BlogUser> BlogUserManager

@{
  ViewData["Title"] = "Read article " + Model.Article?.Title;
  Layout = "_Layout";
}

@{
  var userId = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
}


<div class="py-1">

  <div class="card border-light mb-3">
    <div class="card-header">
      Tags:
      @foreach (var tag in Model.Article!.Tags)
      {
        <a class="text-decoration-none" href="#">
          <span class="badge bg-info">
            @tag?.TagName
          </span>
        </a>
      }
    </div>
    <div class="card-body">
      <a asp-action="Read" asp-controller="Article" asp-route-articleId="@Model.Article?.Id">
        <h4 class="card-title">@Model.Article?.Title</h4>
      </a>
      <small>
        by
        <a class="text-decoration-none" href="#">
          <span class=" text-muted">@Model.Article?.Author</span>
        </a>
        on
        <span class="">@Model.Article?.Published.Date.ToShortDateString()</span>
      </small>

      <div class="card-text">
        @Html.Raw(Model.Article?.Text?.Trim())
      </div>
    </div>


    @{
      System.Diagnostics.Debug.Assert(User.Identity != null, "User.Identity != null");
    }
    @if (User.Identity.IsAuthenticated &&
         (Model.Article?.UserId == userId ||
          User.IsInRole(Constants.Roles.Moderator))
      )
    {
      <div class="btn-group justify-content-end" role="group" aria-label="Basic example">
        <a asp-action="Update" asp-controller="Article" asp-route-id="@Model.Article?.Id">
          <button type="button" class="btn btn-secondary mx-2">
            <i class="bi bi-pencil-fill"></i> Edit
          </button>
        </a>

        <a asp-action="DeleteComment" asp-controller="Article" asp-route-id="@Model.Article?.Id">
          <button type="button" class="btn btn-secondary">
            <i class="bi bi-trash-fill"></i> Delete
          </button>
        </a>
      </div>
    }
  </div>


  <h6>Comments:</h6>
  @{
    System.Diagnostics.Debug
      .Assert(Model.Article?.Comments != null, "Model.Comments != null");
  }
  @foreach (var comment in Model.Article.Comments)
  {
    <div class="card gap-2 my-4">
      <div class="card-body">
        <h5 class="card-title d-flex justify-content-between">
          @if (Model.Article?.Comments != null)
          {
            <a class="text-decoration-none" href="#">
              @BlogUserManager.FindByIdAsync(comment.UserId).Result.GetFullName()
            </a>
          }
          @if (comment.UserId == userId ||
               User.IsInRole(Constants.Roles.Moderator))
          {
            <div class="btn-group justify-content-end" role="group" aria-label="Basic example">
              <a asp-action="EditComment" asp-controller="Article" asp-route-commentId="@comment.Id">
                <button type="button" class="btn btn-link btn-sm mx-2">
                  <i class="bi bi-pencil-fill"></i> Edit
                </button>
              </a>

              <a asp-action="Delete" asp-controller="Article" asp-route-id="@comment.Id">
                <button type="button" class="btn btn-link btn-sm">
                  <i class="bi bi-trash-fill"></i> Delete
                </button>
              </a>
            </div>
          }
        </h5>
        <h6 class="card-subtitle mb-2 text-muted">
          @comment.Added.ToLongDateString()
        </h6>
        <p class="card-text">@comment.Text</p>
      </div>
    </div>
  }


</div>
@if (User.Identity.IsAuthenticated &&
     User.IsInRole(Constants.Roles.User)
  )
{
  <partial name="_TextEditorPartial"/>
@using (Html.BeginForm("EditComment", "Article"))
{
  @Html.HiddenFor(j => @Model.Article!.Id)
  <fieldset class="align-items-start">
    <div class="form-group">
      <label class="col-form-label mt-4" asp-for="@Model.Text"></label>
      <div class=" mb-3">
        <textarea class="form-control" id="text-area-comment" rows="5"  placeholder="Write something here" asp-for="Text" aria-label="Write something here" aria-describedby="edit-comment">
      </textarea>

        <span asp-validation-for="@Model.Text" class="text-danger"></span>
      </div>
      <div class="d-grid gap-2">
        <button class="btn btn-primary" type="submit" id="edit-comment" asp-controller="Article" asp-action="EditComment" asp-route-commentId="@Model.CommentId">Submit</button>
      </div>
    </div>
  </fieldset>
}
}